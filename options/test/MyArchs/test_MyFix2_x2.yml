name: test_myarch2
model_type: SRModel
scale: 2
num_gpu: 1 # set num_gpu: 0 for cpu mode
manual_seed: 10

datasets:
  test_1: # the 1st test dataset
    name: Set5
    type: PairedImageDataset
    dataroot_gt: datasets/Set5/GTmod12
    dataroot_lq: datasets/Set5/LRbicx2
    filename_tmpl: "{}"
    io_backend:
      type: disk
    val_img_size_mod: 48

  # test_2: # the 2nd test dataset
  #   name: Set14
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/Set14/GTmod12
  #   dataroot_lq: datasets/Set14/LRbicx2
  #   filename_tmpl: "{}"
  #   io_backend:
  #     type: disk

  # test_3:  # the 1st test dataset
  #   name: B100
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/banchmark/B100/GTmod12
  #   dataroot_lq: datasets/banchmark/B100//LRbicx2
  #   filename_tmpl: '{}'
  #   io_backend:
  #     type: disk

  # test_4:  # the 2nd test dataset
  #   name: Urban100
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/banchmark/Urban100/GTmod12
  #   dataroot_lq: datasets/banchmark/Urban100//LRbicx2
  #   filename_tmpl: '{}'
  #   io_backend:
  #     type: disk

  # test_5:  # the 1st test dataset
  #   name: Manga109
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/banchmark/Manga109/GTmod12
  #   dataroot_lq: datasets/banchmark/Manga109//LRbicx2
  #   filename_tmpl: '{}'
  #   io_backend:
  #     type: disk

  # test_6:
  #   name: DIV2K_val100
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/DIV2K/DIV2K_Valid/HR
  #   dataroot_lq: datasets/DIV2K/DIV2K_Valid/LR_bicubic/X2
  #   filename_tmpl: '{}x2'
  #   io_backend:
  #     type: disk

# network structures
network_g:
  type: MyFix2
  dim: 36
  n_blocks: 8
  upscaling_factor: 2

# path
path:
  pretrain_network_g: experiments/train_MyFix2_x2/models/net_g_5000.pth
  strict_load_g: true
  param_key_g: params_ema

# validation settings
val:
  save_img: true
  suffix: ~ # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 2
      test_y_channel: true
# python basicsr/test.py -opt options/test/MyArchs/test_MyFix2_x2.yml
